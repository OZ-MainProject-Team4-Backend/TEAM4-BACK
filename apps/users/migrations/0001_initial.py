# Generated by Django 5.2.7 on 2025-10-31 05:44

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DashboardStats',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('stat_date', models.DateField()),
                ('total_users', models.IntegerField(default=0)),
                ('total_diaries', models.IntegerField(default=0)),
                ('api_calls', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'dashboard_stats',
            },
        ),
        migrations.CreateModel(
            name='SystemSettings',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('key', models.CharField(max_length=150, unique=True)),
                ('value', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'system_settings',
                'ordering': ['key'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=150, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('nickname', models.CharField(blank=True, max_length=50, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
                ('email_verified', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='AdminAction',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'action_type',
                    models.CharField(
                        choices=[
                            ('SUSPEND', '계정 정지'),
                            ('RESTORE', '계정 복구'),
                            ('WARNING', '경고'),
                            ('DELETE', '삭제'),
                            ('OTHER', '기타'),
                        ],
                        max_length=20,
                        verbose_name='조치 유형',
                    ),
                ),
                (
                    'reason',
                    models.TextField(blank=True, null=True, verbose_name='사유'),
                ),
                (
                    'created_at',
                    models.DateTimeField(auto_now_add=True, verbose_name='조치 시각'),
                ),
                (
                    'admin',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='admin_actions',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='관리자',
                    ),
                ),
                (
                    'user',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='user_actions',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='대상 유저',
                    ),
                ),
            ],
            options={
                'verbose_name': '관리자 조치 로그',
                'verbose_name_plural': '관리자 조치 로그 목록',
                'db_table': 'admin_action_log',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('access_jwt', models.CharField(blank=True, max_length=500, null=True)),
                (
                    'refresh_jwt',
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ('access_expires_at', models.DateTimeField(blank=True, null=True)),
                ('refresh_expires_at', models.DateTimeField(blank=True, null=True)),
                ('revoked', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                (
                    'user',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='users.user'
                    ),
                ),
            ],
            options={
                'verbose_name': 'Token',
                'verbose_name_plural': 'Tokens',
                'db_table': 'tokens',
            },
        ),
        migrations.CreateModel(
            name='EmailVerification',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=150)),
                ('code', models.CharField(max_length=100)),
                ('is_used', models.BooleanField(default=False)),
                ('expires_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                (
                    'user',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='email_verifications',
                        to='users.user',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Email Verification',
                'verbose_name_plural': 'Email Verifications',
                'db_table': 'email_verifications',
            },
        ),
        migrations.CreateModel(
            name='SocialAccount',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('provider', models.CharField(max_length=20)),
                ('provider_user_id', models.CharField(max_length=200)),
                (
                    'connected_at',
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    'user',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='users.user'
                    ),
                ),
            ],
            options={
                'verbose_name': 'Social Account',
                'verbose_name_plural': 'Social Accounts',
                'db_table': 'social_accounts',
                'unique_together': {('provider', 'provider_user_id')},
            },
        ),
    ]
